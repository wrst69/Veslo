generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  name      String
  hash      String
  salt      String
  login     String    @unique
  avatar    String?
  role      Roles     @default(VIEWER)
  orders    Order[]
  comments  Comment[]

  @@map("users")
}

enum Roles {
  ADMIN
  USER
  VIEWER
}

model Node {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  lersId    Int      @map("lers_id")
  title     String

  orders        Order[]
  measurePoints MeasurePoint[]

  @@map("nodes")
}

model MeasurePoint {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  lersId    Int      @map("lers_id")
  title     String

  nodeId Int  @map("node_id")
  node   Node @relation(fields: [nodeId], references: [id])

  orders Order[]

  @@map("measure_points")
}

model Order {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  description String
  type        OrderTypes    @default(FIRST)
  status      OrderStatuses @default(PENDING)

  ownerId        Int          @map("owner_id")
  nodeId         Int          @map("node_id")
  measurePointId Int          @map("measure_point_id")
  owner          User         @relation(fields: [ownerId], references: [id])
  node           Node         @relation(fields: [nodeId], references: [id])
  measurePoint   MeasurePoint @relation(fields: [measurePointId], references: [id])

  comments Comment[]

  @@map("orders")
}

enum OrderStatuses {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}

enum OrderTypes {
  FIRST
  SECOND
  THIRD
  FOURTH
  FIFTH
}

model OrderUpdate {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  @@map("order_updates")
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String

  ownerId Int
  orderId Int
  owner   User  @relation(fields: [ownerId], references: [id])
  order   Order @relation(fields: [orderId], references: [id])

  @@map("comments")
}
