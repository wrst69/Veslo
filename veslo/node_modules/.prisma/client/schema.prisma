generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  name String @unique
  role String @default("viewer")
  hash String
  salt String

  orders       Order[]
  orderUpdates OrderUpdate[]
  comments     Comment[]

  @@map("users")
}

model Node {
  id   Int    @unique
  name String

  measurePoints MeasurePoint[]
  orders        Order[]
}

model MeasurePoint {
  id   Int    @unique
  name String

  nodeId Int  @map("node_id")
  node   Node @relation(fields: [nodeId], references: [id])

  orders Order[]
}

model Order {
  id Int @id @default(autoincrement())

  ownerId Int  @unique @map("owner_id")
  owner   User @relation(fields: [ownerId], references: [id])

  nodeId Int  @unique @map("node_id")
  node   Node @relation(fields: [nodeId], references: [id])

  measurePointId Int          @unique @map("measure_point_id")
  measurePoint  MeasurePoint @relation(fields: [measurePointId], references: [id])

  title    String  @default("")
  isClosed Boolean @default(false) @map("is_closed")

  updates  OrderUpdate[]
  comments Comment[]

  @@map("orders")
}

model OrderUpdate {
  id Int @id @default(autoincrement())

  ownerId Int  @unique
  owner   User @relation(fields: [ownerId], references: [id])

  orderId Int   @unique
  order   Order @relation(fields: [orderId], references: [id])

  @@map("order_updates")
}

model Comment {
  id Int @id @default(autoincrement())
  title String

  ownerId Int  @unique
  owner   User @relation(fields: [ownerId], references: [id])

  orderId Int   @unique
  order   Order @relation(fields: [orderId], references: [id])

  @@map("comments")
}
